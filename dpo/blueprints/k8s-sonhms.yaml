 #============LICENSE_START=======================================================
 #    son-handler
 #   ================================================================================
 #     Copyright (C) 2019 Wipro Limited.
 #     ==============================================================================
 #       Licensed under the Apache License, Version 2.0 (the "License");
 #       you may not use this file except in compliance with the License.
 #       You may obtain a copy of the License at
 #    
 #            http://www.apache.org/licenses/LICENSE-2.0
 #    
 #       Unless required by applicable law or agreed to in writing, software
 #       distributed under the License is distributed on an "AS IS" BASIS,
 #       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 #       See the License for the specific language governing permissions and
 #       limitations under the License.
 #       ============LICENSE_END=========================================================

tosca_definitions_version: cloudify_dsl_1_3
imports:
  - "http://www.getcloudify.org/spec/cloudify/3.4/types.yaml"
  - https://nexus.onap.org/service/local/repositories/raw/content/org.onap.dcaegen2.platform.plugins/R4/k8splugin/1.4.5/k8splugin_types.yaml
  - https://nexus.onap.org/service/local/repositories/raw/content/org.onap.ccsdk.platform.plugins/type_files/pgaas/1.1.0/pgaas_types.yaml
inputs:
  external_port:
    type: integer
    description: Kubernetes node port on which son handler is exposed
    default: 30248
  replicas:
    type: integer
    description: replica count for deployment
    default: 1
  tag_version:
    type: string
    description: docker image name and version
    default: "{{ ONAPTEMPLATE_DOCKERREGURL_org_onap_dcaegen2_releases }}/onap/org.onap.dcaegen2.services.son-handler:latest"
  pgaas_cluster_name:
    type: string
    description: pg cluster
    default: "dcae-postgres.onap.svc.cluster.local"
  database_name:
    type: string
    description: database name
    default: sonhms
  aaf_username:
    type: string
    description: aaf username
  aaf_password:
    type: string
    description: aaf password
  polling_interval:
    type: string
    description: dmaap polling interval
    default: 20
  polling_timeout:
    type: string
    description: dmaap polling timeout
    default: 60
  num_solutions:
    type: string
    description: num of solutions
    default: 5
  min_collision:
    type: string
    description: minimum no. of collisions
    default: 5
  min_confusion: 
    type: string
    description: minimum no. of confusions
    default: 5
  max_clusters:
    type: string
    description: maximum clusters
    default: 5
  dmaap:
    type: string
    description: dmaap server
    default: message-router
  buffer_time:
    type: string
    description: buffer time
    default: 60
  cg:
    type: string
    description: consumer group
    default: sonhms-cg
  cid:
    type: string
    description: consumer id
    default: sonhms-cid
  config_db:
    type: string
    description: config db location
  callback:
    type: string
    description: callback url
    default: http://dcae-sonhms:8080/callback
  oof:
    type: string
    description: oof location
  pci_optimizer:
    type: string
    description: pci optimizer name in oof
    default: pci
  topic00_location:
  topic01_location:
  topic02_location:
  topic03_location:
  topic00_client_role:
  topic01_client_role:
  topic02_client_role:
  topic03_client_role:
  topic00_client_id:
  topic01_client_id:
  topic02_client_id:
  topic03_client_id:
  topic00_url:
  topic01_url:
  topic02_url:
  topic03_url:
  
node_templates:
  pgaasvm:
    type: dcae.nodes.pgaas.database
    properties: 
      writerfqdn: { get_input: pgaas_cluster_name }
      name: { get_input: database_name }
      use_existing: false
    
  sonhms:
    type: dcae.nodes.ContainerizedPlatformComponent
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          inputs:
            ports:
              - concat: ["8080:", { get_input: external_port }]
    properties:
      image:
        get_input: tag_version
      name: 'dcae-sonhms'
      replicas: {get_input: replicas}
      dns_name: 'dcae-sonhms'
      log_info: 
        log_directory: "/var/log/onap/son-handler"
      docker_config:
        healthcheck:
          endpoint: /healthcheck
          interval: 15s
          timeout: 1s
          type: http
      application_config:
        stream_subscribes:
          performance_management_topic:
            aaf_username: { get_input: aaf_username }
            aaf_password: { get_input: aaf_password }
            dmaap_info: "<<topic00>>"
            type: message-router
          fault_management_topic:
            aaf_username: { get_input: aaf_username }
            aaf_password: { get_input: aaf_password }
            dmaap_info: "<<topic01>>"
            type: message-router
          nbr_list_change_topic:
            aaf_username: { get_input: aaf_username }
            aaf_password: { get_input: aaf_password }
            dmaap_info: "<<topic02>>"
            type: message-router
        stream_publishes:
          CL_topic:
            aaf_username: { get_input: aaf_username }
            aaf_password: { get_input: aaf_password }
            dmaap_info: "<<topic03>>"
            type: message-router
        postgres.host: { get_attribute: [ pgaasvm, admin, host ] }
        postgres.port: { get_attribute: [ pgaasvm, admin, port ] }
        postgres.username: { get_attribute: [ pgaasvm, admin, user ] }
        postgres.password: { get_attribute: [ pgaasvm, admin, password ] }
        sonhandler.pollindInterval: { get_input: polling_interval}
        sonhandler.pollingTimeout: { get_input: polling_timeout }
        sonhandler.numSolutions: { get_input: num_solutions }
        sonhandler.minCollision: { get_input: min_collision }
        sonhandler.minConfusion: { get_input: min_confusion }
        sonhandler.maximumClusters: { get_input: max_clusters }
        sonhandler.sourceId: SONHMS
        sonhandler.dmaap.server: 
          - { get_input: dmaap }
        sonhandler.bufferTime: { get_input: buffer_time }
        sonhandler.cg: { get_input: cg }
        sonhandler.cid: { get_input: cid }
        sonhandler.configDb.service: { get_input: config_db }
        sonhandler.callbackUrl: { get_input: callback }
        sonhandler.oof.service: { get_input: oof }
        sonhandler.optimizers: 
          - { get_input: pci_optimizer }
        service_calls:
          sdnr-getpnfname: []
          sdnr-getpci: []
          sdnr-getnbrlist: []
          sdnr-getcelllist: []
          oof-req: []
          policy-req: []
    relationships:
      - type: cloudify.relationships.depends_on
        target: pgaasvm
        
      
      
        
